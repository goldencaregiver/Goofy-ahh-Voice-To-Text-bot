import os
import telebot
import speech_recognition
from pydub import AudioSegment

token = 'YOUR TOKEN HERE'

bot = telebot.TeleBot(token)

def ogg_to_wav(filename: str) -> str | None:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç OGG –∞—É–¥–∏–æ –≤ WAV"""
    try:
        new_filename = filename.replace('.ogg', '.wav')
        audio = AudioSegment.from_file(filename)
        audio.export(new_filename, format='wav')
        return new_filename
    except Exception as e:
        print(f"Error converting OGG to WAV: {e}")
        return None

def mp4_to_wav(filename: str) -> str | None:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∞—É–¥–∏–æ –∏–∑ MP4 –≤–∏–¥–µ–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ WAV"""
    try:
        new_filename = filename.replace('.mp4', '.wav')
        # Pydub –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ—Ç –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫—É –∏–∑ mp4
        audio = AudioSegment.from_file(filename, format="mp4")
        audio.export(new_filename, format='wav')
        return new_filename
    except Exception as e:
        print(f"Error extracting audio from MP4: {e}")
        return None

def recognize_speech(wav_filename: str) -> str | None:
    """–†–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ä–µ—á—å –∏–∑ WAV —Ñ–∞–π–ª–∞."""
    recognizer = speech_recognition.Recognizer()
    try:
        with speech_recognition.WavFile(wav_filename) as source:
            wav_audio = recognizer.record(source)
        text = recognizer.recognize_google(wav_audio, language='ru-RU')
        return text
    except speech_recognition.UnknownValueError:
        print("Google Speech Recognition could not understand audio")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å."
    except speech_recognition.RequestError as e:
        print(f"Could not request results from Google service; {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–∏—Å—É —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è."

def download_file(bot: telebot.TeleBot, file_id: str) -> str | None:
    """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º."""
    try:
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        
        # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
        file_extension = os.path.splitext(file_info.file_path)[1]
        filename = f"{file_id}{file_extension}"

        with open(filename, 'wb') as f:
            f.write(downloaded_file)
        return filename
    except Exception as e:
        print(f"Error downloading file: {e}")
        return None

def process_media_message(message):
    """–û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ—á–∫–æ–≤."""
    bot.send_message(message.chat.id, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ... ‚è≥")
    
    file_id = None
    media_type = None

    if message.content_type == 'voice':
        file_id = message.voice.file_id
        media_type = 'voice'
    elif message.content_type == 'video_note':
        file_id = message.video_note.file_id
        media_type = 'video_note'

    if not file_id:
        return

    original_filename = download_file(bot, file_id)
    if not original_filename:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª.")
        return

    wav_filename = None
    if media_type == 'voice':
        wav_filename = ogg_to_wav(original_filename)
    elif media_type == 'video_note':
        wav_filename = mp4_to_wav(original_filename)

    if not wav_filename:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª.")
        os.remove(original_filename) # –û—á–∏—â–∞–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        return
        
    text = recognize_speech(wav_filename)
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if os.path.exists(original_filename):
        os.remove(original_filename)
    if os.path.exists(wav_filename):
        os.remove(wav_filename)
        
    if text:
        response = f"üé§ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:\n\n{text}"
        bot.send_message(message.chat.id, response)
    else:
        # –≠—Ç–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–ª—É—á–∏—Ç—å—Å—è, —Ç–∞–∫ –∫–∞–∫ recognize_speech –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏,
        # –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.")

@bot.message_handler(commands=['start'])
def say_hi(message):
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —á—Ç–æ–±—ã –æ–Ω–æ –≤–∫–ª—é—á–∞–ª–æ –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ—á–∫–∏
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–¥–µ–æ-–∫—Ä—É–∂–æ—á–µ–∫, –∏ —è –ø—Ä–µ–≤—Ä–∞—â—É –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç.')

@bot.message_handler(content_types=['voice', 'video_note'])
def transcript_media(message):
    """–ï–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –º–µ–¥–∏–∞-—Ç–∏–ø–æ–≤."""
    process_media_message(message)

print("Bot is running...")
bot.polling(non_stop=True)